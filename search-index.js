var searchIndex = {};
searchIndex['spellck_standalone'] = {"items":[[0,"","spellck_standalone","Prints the misspelled words in the public documentation &\nidentifiers of a crate."]],"paths":[]};
searchIndex['spellck'] = {"items":[[0,"","spellck",""],[5,"plugin_registrar","",""],[0,"words","","Utilities for iterating over the \"words\" in a string."],[3,"SubwordIter","spellck::words","Struct for the `subwords` iterator."],[5,"subwords","","Iterate over the \"subwords\" of a string, e.g. `Foobar` -> `Foo`,\n`Bar`; `foo_bar` -> `foo`, `bar`; `AB Cd123e` -> `A`, `B`, `Cd`,\n`e`."],[6,"Item","",""],[11,"next","","",0],[0,"visitor","spellck",""],[3,"Position","spellck::visitor",""],[12,"span","","",1],[12,"id","","",1],[3,"SpellingVisitor","","Keeps track of the reference dictionary and the misspelled words\nthrough a traversal of the whole ast."],[12,"misspellings","","The misspelled words",2],[11,"eq","","",1],[11,"partial_cmp","","",1],[11,"cmp","","",1],[11,"new","","ast::Create a new Spelling Visitor.",2],[11,"check_crate","","Spell-check a whole krate.",2],[11,"visit_foreign_item","","",2],[11,"visit_item","","",2],[11,"visit_ty_method","","",2],[11,"visit_trait_item","","",2],[11,"visit_struct_def","","",2],[11,"visit_struct_field","","",2],[11,"visit_local","","we're only interested in top-level things, so we can just\nignore these entirely.",2],[11,"visit_block","","",2],[11,"visit_stmt","","",2],[11,"visit_arm","","",2],[11,"visit_pat","","",2],[11,"visit_decl","","",2],[11,"visit_expr","","",2],[11,"visit_expr_post","","",2],[11,"visit_ty","","",2],[11,"visit_generics","","",2],[11,"visit_fn","","",2]],"paths":[[3,"SubwordIter"],[3,"Position"],[3,"SpellingVisitor"]]};

searchIndex['stem'] = {"items":[[0,"","stem",""],[5,"get","",""]],"paths":[]};

initSearch(searchIndex);
